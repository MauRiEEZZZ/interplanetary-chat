// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: interplanetarymessage.proto

package main

import (
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InterplanetaryMessage_Type int32

const (
	InterplanetaryMessage_TEXT_MESSAGE           InterplanetaryMessage_Type = 0
	InterplanetaryMessage_ENCRYPTED_TEXT_MESSAGE InterplanetaryMessage_Type = 1
)

var InterplanetaryMessage_Type_name = map[int32]string{
	0: "TEXT_MESSAGE",
	1: "ENCRYPTED_TEXT_MESSAGE",
}

var InterplanetaryMessage_Type_value = map[string]int32{
	"TEXT_MESSAGE":           0,
	"ENCRYPTED_TEXT_MESSAGE": 1,
}

func (x InterplanetaryMessage_Type) Enum() *InterplanetaryMessage_Type {
	p := new(InterplanetaryMessage_Type)
	*p = x
	return p
}

func (x InterplanetaryMessage_Type) String() string {
	return proto.EnumName(InterplanetaryMessage_Type_name, int32(x))
}

func (x *InterplanetaryMessage_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InterplanetaryMessage_Type_value, data, "InterplanetaryMessage_Type")
	if err != nil {
		return err
	}
	*x = InterplanetaryMessage_Type(value)
	return nil
}

func (InterplanetaryMessage_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_984e299b5ca00b62, []int{0, 0}
}

type InterplanetaryMessage struct {
	Type                 *InterplanetaryMessage_Type `protobuf:"varint,1,req,name=type,enum=main.InterplanetaryMessage_Type" json:"type,omitempty"`
	TextMessage          *TextMessage                `protobuf:"bytes,2,opt,name=textMessage" json:"textMessage,omitempty"`
	EncryptedTextMessage *EncryptedTextMessage       `protobuf:"bytes,3,opt,name=encryptedTextMessage" json:"encryptedTextMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *InterplanetaryMessage) Reset()         { *m = InterplanetaryMessage{} }
func (m *InterplanetaryMessage) String() string { return proto.CompactTextString(m) }
func (*InterplanetaryMessage) ProtoMessage()    {}
func (*InterplanetaryMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_984e299b5ca00b62, []int{0}
}
func (m *InterplanetaryMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InterplanetaryMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InterplanetaryMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InterplanetaryMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterplanetaryMessage.Merge(m, src)
}
func (m *InterplanetaryMessage) XXX_Size() int {
	return m.Size()
}
func (m *InterplanetaryMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InterplanetaryMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InterplanetaryMessage proto.InternalMessageInfo

func (m *InterplanetaryMessage) GetType() InterplanetaryMessage_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return InterplanetaryMessage_TEXT_MESSAGE
}

func (m *InterplanetaryMessage) GetTextMessage() *TextMessage {
	if m != nil {
		return m.TextMessage
	}
	return nil
}

func (m *InterplanetaryMessage) GetEncryptedTextMessage() *EncryptedTextMessage {
	if m != nil {
		return m.EncryptedTextMessage
	}
	return nil
}

type TextMessage struct {
	Created              *int64   `protobuf:"varint,1,req,name=created" json:"created,omitempty"`
	Text                 *string  `protobuf:"bytes,2,req,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextMessage) Reset()         { *m = TextMessage{} }
func (m *TextMessage) String() string { return proto.CompactTextString(m) }
func (*TextMessage) ProtoMessage()    {}
func (*TextMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_984e299b5ca00b62, []int{1}
}
func (m *TextMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TextMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TextMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TextMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextMessage.Merge(m, src)
}
func (m *TextMessage) XXX_Size() int {
	return m.Size()
}
func (m *TextMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TextMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TextMessage proto.InternalMessageInfo

func (m *TextMessage) GetCreated() int64 {
	if m != nil && m.Created != nil {
		return *m.Created
	}
	return 0
}

func (m *TextMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

type EncryptedTextMessage struct {
	Iv                   []byte   `protobuf:"bytes,1,req,name=iv" json:"iv,omitempty"`
	MessageKey           []byte   `protobuf:"bytes,2,req,name=message_key,json=messageKey" json:"message_key,omitempty"`
	UnpaddedLen          *int64   `protobuf:"varint,3,req,name=unpadded_len,json=unpaddedLen" json:"unpadded_len,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedTextMessage) Reset()         { *m = EncryptedTextMessage{} }
func (m *EncryptedTextMessage) String() string { return proto.CompactTextString(m) }
func (*EncryptedTextMessage) ProtoMessage()    {}
func (*EncryptedTextMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_984e299b5ca00b62, []int{2}
}
func (m *EncryptedTextMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EncryptedTextMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EncryptedTextMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EncryptedTextMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedTextMessage.Merge(m, src)
}
func (m *EncryptedTextMessage) XXX_Size() int {
	return m.Size()
}
func (m *EncryptedTextMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedTextMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedTextMessage proto.InternalMessageInfo

func (m *EncryptedTextMessage) GetIv() []byte {
	if m != nil {
		return m.Iv
	}
	return nil
}

func (m *EncryptedTextMessage) GetMessageKey() []byte {
	if m != nil {
		return m.MessageKey
	}
	return nil
}

func (m *EncryptedTextMessage) GetUnpaddedLen() int64 {
	if m != nil && m.UnpaddedLen != nil {
		return *m.UnpaddedLen
	}
	return 0
}

func (m *EncryptedTextMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("main.InterplanetaryMessage_Type", InterplanetaryMessage_Type_name, InterplanetaryMessage_Type_value)
	proto.RegisterType((*InterplanetaryMessage)(nil), "main.InterplanetaryMessage")
	proto.RegisterType((*TextMessage)(nil), "main.TextMessage")
	proto.RegisterType((*EncryptedTextMessage)(nil), "main.EncryptedTextMessage")
}

func init() { proto.RegisterFile("interplanetarymessage.proto", fileDescriptor_984e299b5ca00b62) }

var fileDescriptor_984e299b5ca00b62 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x9b, 0x69, 0x40, 0xbc, 0x09, 0xa5, 0x0e, 0x55, 0x86, 0x0a, 0x31, 0x66, 0xd5, 0x55,
	0x16, 0xb5, 0x3b, 0x57, 0xfe, 0x04, 0x11, 0x6d, 0x91, 0x69, 0x16, 0xba, 0x0a, 0x43, 0x73, 0x91,
	0x60, 0x3b, 0x0d, 0xe9, 0x58, 0x9c, 0x8d, 0x6b, 0x1f, 0xc1, 0x47, 0x72, 0xe9, 0x23, 0x48, 0x7d,
	0x11, 0xc9, 0xb4, 0xc5, 0x14, 0xb2, 0xbb, 0xb9, 0xe7, 0x3b, 0xe7, 0x1e, 0x32, 0x70, 0x9c, 0x49,
	0x85, 0x45, 0x3e, 0x15, 0x12, 0x95, 0x28, 0xf4, 0x0c, 0x17, 0x0b, 0xf1, 0x8c, 0x61, 0x5e, 0xcc,
	0xd5, 0x9c, 0xda, 0x33, 0x91, 0xc9, 0xe0, 0x83, 0xc0, 0xe1, 0xed, 0x0e, 0x35, 0x5c, 0x53, 0x74,
	0x00, 0xb6, 0xd2, 0x39, 0x32, 0xcb, 0x27, 0xbd, 0x56, 0xdf, 0x0f, 0x4b, 0x3c, 0xac, 0x45, 0xc3,
	0x58, 0xe7, 0xc8, 0x0d, 0x4d, 0xcf, 0xc0, 0x51, 0xf8, 0xa6, 0x36, 0x0a, 0x23, 0xbe, 0xd5, 0x73,
	0xfa, 0x07, 0x6b, 0x73, 0xfc, 0x2f, 0xf0, 0x2a, 0x45, 0x47, 0xd0, 0x41, 0x39, 0x29, 0x74, 0xae,
	0x30, 0xad, 0x40, 0xac, 0x69, 0xdc, 0xdd, 0xb5, 0x3b, 0xaa, 0x21, 0x78, 0xad, 0x2f, 0x18, 0x80,
	0x5d, 0x56, 0xa2, 0x6d, 0x70, 0xe3, 0xe8, 0x31, 0x4e, 0x86, 0xd1, 0x78, 0x7c, 0x71, 0x13, 0xb5,
	0x1b, 0xb4, 0x0b, 0x47, 0xd1, 0xe8, 0x8a, 0x3f, 0x3d, 0xc4, 0xd1, 0x75, 0xb2, 0xa3, 0x59, 0xc1,
	0x39, 0x38, 0x95, 0x10, 0xca, 0x60, 0x6f, 0x52, 0xa0, 0x50, 0x98, 0x9a, 0x5f, 0xd0, 0xe4, 0xdb,
	0x4f, 0x4a, 0xc1, 0x2e, 0xdb, 0x33, 0xe2, 0x93, 0xde, 0x3e, 0x37, 0x73, 0xf0, 0x0e, 0x9d, 0xba,
	0x82, 0xb4, 0x05, 0x24, 0x5b, 0x9a, 0x00, 0x97, 0x93, 0x6c, 0x49, 0x4f, 0xc0, 0xd9, 0x3c, 0x43,
	0xf2, 0x82, 0xda, 0x44, 0xb8, 0x1c, 0x36, 0xab, 0x3b, 0xd4, 0xf4, 0x14, 0xdc, 0x57, 0x99, 0x8b,
	0x34, 0xc5, 0x34, 0x99, 0xa2, 0x64, 0x4d, 0x73, 0xdb, 0xd9, 0xee, 0xee, 0x51, 0x96, 0xf7, 0x53,
	0xa1, 0x04, 0xb3, 0x8d, 0xd9, 0xcc, 0x97, 0xed, 0xaf, 0x95, 0x67, 0x7d, 0xaf, 0x3c, 0xeb, 0x67,
	0xe5, 0x59, 0x9f, 0xbf, 0x5e, 0xe3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x30, 0x99, 0xe1, 0xf7, 0xfd,
	0x01, 0x00, 0x00,
}

func (m *InterplanetaryMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InterplanetaryMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InterplanetaryMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EncryptedTextMessage != nil {
		{
			size, err := m.EncryptedTextMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintInterplanetarymessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.TextMessage != nil {
		{
			size, err := m.TextMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintInterplanetarymessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Type == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TextMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TextMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TextMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Text == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(*m.Text)
		copy(dAtA[i:], *m.Text)
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(len(*m.Text)))
		i--
		dAtA[i] = 0x12
	}
	if m.Created == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(*m.Created))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *EncryptedTextMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EncryptedTextMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EncryptedTextMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x22
	}
	if m.UnpaddedLen == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(*m.UnpaddedLen))
		i--
		dAtA[i] = 0x18
	}
	if m.MessageKey == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(m.MessageKey)
		copy(dAtA[i:], m.MessageKey)
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(len(m.MessageKey)))
		i--
		dAtA[i] = 0x12
	}
	if m.Iv == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		i -= len(m.Iv)
		copy(dAtA[i:], m.Iv)
		i = encodeVarintInterplanetarymessage(dAtA, i, uint64(len(m.Iv)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintInterplanetarymessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovInterplanetarymessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *InterplanetaryMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovInterplanetarymessage(uint64(*m.Type))
	}
	if m.TextMessage != nil {
		l = m.TextMessage.Size()
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.EncryptedTextMessage != nil {
		l = m.EncryptedTextMessage.Size()
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TextMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Created != nil {
		n += 1 + sovInterplanetarymessage(uint64(*m.Created))
	}
	if m.Text != nil {
		l = len(*m.Text)
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EncryptedTextMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Iv != nil {
		l = len(m.Iv)
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.MessageKey != nil {
		l = len(m.MessageKey)
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.UnpaddedLen != nil {
		n += 1 + sovInterplanetarymessage(uint64(*m.UnpaddedLen))
	}
	if m.Data != nil {
		l = len(m.Data)
		n += 1 + l + sovInterplanetarymessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovInterplanetarymessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozInterplanetarymessage(x uint64) (n int) {
	return sovInterplanetarymessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InterplanetaryMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInterplanetarymessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InterplanetaryMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InterplanetaryMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v InterplanetaryMessage_Type
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= InterplanetaryMessage_Type(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TextMessage == nil {
				m.TextMessage = &TextMessage{}
			}
			if err := m.TextMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedTextMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EncryptedTextMessage == nil {
				m.EncryptedTextMessage = &EncryptedTextMessage{}
			}
			if err := m.EncryptedTextMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipInterplanetarymessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TextMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInterplanetarymessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TextMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TextMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Created = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Text = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipInterplanetarymessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EncryptedTextMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowInterplanetarymessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EncryptedTextMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EncryptedTextMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iv", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Iv = append(m.Iv[:0], dAtA[iNdEx:postIndex]...)
			if m.Iv == nil {
				m.Iv = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageKey = append(m.MessageKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MessageKey == nil {
				m.MessageKey = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnpaddedLen", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnpaddedLen = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipInterplanetarymessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthInterplanetarymessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipInterplanetarymessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowInterplanetarymessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowInterplanetarymessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthInterplanetarymessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupInterplanetarymessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthInterplanetarymessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthInterplanetarymessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowInterplanetarymessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupInterplanetarymessage = fmt.Errorf("proto: unexpected end of group")
)
